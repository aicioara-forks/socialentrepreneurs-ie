<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<display-name>SEI CFG</display-name>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/seicfgWeb-servlet.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>
	
	<!-- We require this to avoid session being alive on server for a long time even after user was diconnected-->
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <listener>
       <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
       
	<listener>
	    <description>sessionListener</description>
	    <listener-class>uk.seicfg.security.SessionListener</listener-class>
	</listener>

	<!-- keep Spring Security updated about session lifecycle events -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>seicfgWeb</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>seicfgWeb</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- Spring Security filter -->
 	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
	    <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
	    <filter-class>
	        org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
	    </filter-class>
	      <init-param>
			<param-name>singleSession</param-name>
			<param-value>false</param-value>
		</init-param>
	    
	</filter>
	
	<filter-mapping>
	    <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
</web-app>